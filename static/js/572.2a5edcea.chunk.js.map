{"version":3,"file":"static/js/572.2a5edcea.chunk.js","mappings":"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","sources":["webpack://my/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","webpack://my/./src/components/Dialogs/MessageItem/MessageItem.module.css?481d","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthNavigate.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__g1klt\",\"dialogsItem\":\"Dialogs_dialogsItem__zY6ai\",\"formControl\":\"Dialogs_formControl__7Kv+J\",\"messages\":\"Dialogs_messages__jaF99\",\"error\":\"Dialogs_error__k3mcw\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"DialogItem_messages__-BCVd\",\"message\":\"DialogItem_message__wHPcW\"};","import React from \"react\";\r\nimport s from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogitem\" + props.id;\r\n  return (\r\n    <div>\r\n      <NavLink to={path} className={(d) => (d.isActive ? s.active : s.dialog)}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"MessageItem_messages__w58Zw\",\"message\":\"MessageItem_message__4ctgw\"};","import React from \"react\";\r\nimport s from \"./MessageItem.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default MessageItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { Resolver, useForm } from \"react-hook-form\";\r\n\r\ntype FormTyps ={\r\n  newMessageText: string\r\n  errors: {}\r\n\r\n}\r\ntype PropsTyps ={\r\n  addMessageText: (text:string)=>void\r\n}\r\n\r\nconst resolver: Resolver<FormTyps> = async (values) => {\r\n  return {\r\n    values: values.newMessageText? values : {},\r\n    errors: !values.newMessageText\r\n      ? {\r\n        newMessageText: {\r\n            type: \"required\",\r\n            message: \"Message is require field!\" \r\n          },\r\n        }\r\n      : {},\r\n  }\r\n}\r\n\r\nexport const AddMessageForm: React.FC <PropsTyps> = ({addMessageText}) => {\r\n  const {\r\n    register, handleSubmit, formState: { errors }, reset,\r\n  } = useForm <FormTyps>({resolver});\r\n  const onSubmit = handleSubmit ((data) => {\r\n    // debugger\r\n    addMessageText(data.newMessageText);\r\n    reset()\r\n  })\r\n  const hasError = errors?.newMessageText;\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n      <div>\r\n        <textarea\r\n          className={hasError && s.formControl}\r\n          {...register(\"newMessageText\", {\r\n            required: \"Message is require field!\",\r\n            maxLength: { value: 5, message: \"Max length is 10 simbols\" },\r\n          })}\r\n          placeholder=\"add new text\" />\r\n        {hasError && (\r\n          <div className={s.error}>{errors.newMessageText?.message}</div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport { InitialStateType } from \"../../redux/dialogs-reducer\";\r\nimport { AddMessageForm } from \"./AddMessageForm\";\r\n\r\n\r\n\r\ntype OwnPropsType = {\r\n  dialogsPage: InitialStateType\r\n  addMessageText: (text:string)=>void\r\n}\r\n\r\nconst Dialogs: React.FC<OwnPropsType> = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialog.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagesElements = state.message.map((m) => (\r\n    <MessageItem message={m.message} key={m.id} />\r\n  ));\r\n  \r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItem}>{dialogsElements}</div>\r\n      <div className={s.messages}>{messagesElements}</div>\r\n      <AddMessageForm addMessageText = {props.addMessageText} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\ntype MapPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForNavigate = (state: AppStateType) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport function withAuthNavigate <WCP extends object & MapPropsType>  (WrappedComponent: React.ComponentType<WCP>) {\r\n  \r\n  const NavigateComponent: React.FC <MapPropsType> = (props) => {\r\n      \r\n    const {isAuth,...restProps} = props\r\n\r\n      if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n      \r\n      return <WrappedComponent {...restProps as WCP} />;\r\n    \r\n  }\r\n\r\n  const ConnectedAuthNavigateComponent = connect<MapPropsType,{},WCP,AppStateType> (mapStateToPropsForNavigate)(NavigateComponent);\r\n\r\n  return ConnectedAuthNavigateComponent;\r\n};\r\n","// import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {actions} from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthNavigate } from \"../../hoc/withAuthNavigate\";\r\nimport {compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\nconst mapStateToProps = (state:AppStateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\n\r\nexport default compose <React.ComponentType> (\r\n  connect (mapStateToProps, {...actions}),\r\n  withAuthNavigate\r\n)(Dialogs);\r\n"],"names":["props","path","id","_jsx","children","NavLink","to","className","d","isActive","s","name","message","resolver","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","abrupt","newMessageText","errors","type","stop","_x","apply","arguments","AddMessageForm","_ref2","_errors$newMessageTex","addMessageText","_useForm","useForm","register","handleSubmit","formState","reset","onSubmit","data","hasError","_jsxs","_objectSpread","required","maxLength","value","placeholder","state","dialogsPage","dialogsElements","dialog","map","DialogItem","messagesElements","m","MessageItem","mapStateToPropsForNavigate","isAuth","auth","compose","connect","actions","WrappedComponent","restProps","_objectWithoutProperties","_excluded","Navigate","Dialogs"],"sourceRoot":""}